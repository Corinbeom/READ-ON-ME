plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'bookapp'
version = '0.0.1-SNAPSHOT'
description = 'BookAppBack'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 기본
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("org.springframework.boot:spring-boot-starter-webflux") // 외부 API 호출용
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 데이터베이스
	runtimeOnly("org.postgresql:postgresql")
	runtimeOnly("com.h2database:h2") // 개발용

	// Jackson for JSON processing
	implementation("com.fasterxml.jackson.core:jackson-databind")

	// Swagger/OpenAPI
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0")

	// JWT
	implementation("io.jsonwebtoken:jjwt-api:0.12.3")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.12.3")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.12.3")

	// env
	implementation 'io.github.cdimascio:java-dotenv:5.2.2'

	// Redis
	implementation ("org.springframework.boot:spring-boot-starter-data-redis")

	// 테스트
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.security:spring-security-test")
	testImplementation("org.mockito:mockito-core") // Java 테스트 라이브러리
}


tasks.named('test') {
	useJUnitPlatform()
}
